@using System.Linq.Expressions
@* ReSharper disable CSharpWarnings::CS8619 *@
@* ReSharper disable CSharpWarnings::CS8620 *@
<MudDatePicker @ref="_element"
               Date="@Date"
               Label="@Label"
               Variant="@Variant"
               Margin="@Margin"
               DateChanged="@DateChanged"
               Clearable="@Clearable"
               Class="@Class"
               Style="@Style"
               Placeholder="@Placeholder"
               Required="@Required"
               For="For"/>
@* ReSharper restore CSharpWarnings::CS8620 *@
@* ReSharper restore CSharpWarnings::CS8619 *@

@code {
    private MudDatePicker? _element;

    [Parameter]
    public DateTime? Date { get; set; }

    [Parameter]
    public EventCallback<DateTime?> DateChanged { get; set; }

    [Parameter]
    public string? Label { get; set; }

    [Parameter]
    public string? Placeholder { get; set; }

    [Parameter]
    public Variant Variant { get; set; } = Variant.Outlined;

    [Parameter]
    public Margin Margin { get; set; } = Margin.Dense;

    [Parameter]
    public string? Class { get; set; }

    [Parameter]
    public string? Style { get; set; }

    [Parameter]
    public bool Clearable { get; set; }

    [Parameter]
    public bool Required { get; set; }

    [Parameter]
    public Expression<Func<DateTime?>>? For { get; set; }

    // ReSharper disable once UnusedMember.Global
    public async Task SetFocusAsync()
    {
        if (_element != null)
        {
            await _element.FocusAsync();
        }
    }

}