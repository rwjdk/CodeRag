@using Microsoft.SemanticKernel.ChatCompletion
@using Shared.Ai
@using Website.Extensions
<div>
    @if (_chatModel == null)
    {
        <div>No Chat-models defined in settings ☹️</div>
    }
    else
    {
        <MudGrid Spacing="1" Class="align-items-center">
            <MudSpacer />
            <MudItem>
                <RButton StartIcon="@Icons.Material.Filled.DriveFileRenameOutline" IconColor="Color.Inherit" OnClick="NewChat">New Chat</RButton>
            </MudItem>
            <MudItem>
                <RSelect T="AiChatModel" Items="aiChatQuery.GetChatModels()" @bind-Value="_chatModel" ToStringFunc="@(x => x?.DeploymentName ?? "???")" Style="width: 200px"/>
            </MudItem>
        </MudGrid>

        <div style="height: calc(100vh - 250px); overflow-y: scroll; padding-left: 300px; padding-right: 300px; margin-top: 10px">
            @foreach (var message in _conversation)
            {
                <MudChat ArrowPosition="ChatArrowPosition.None" ChatPosition="@(message.Role == AuthorRole.User ? ChatBubblePosition.End : ChatBubblePosition.Start)">
                    <MudChatBubble Style="text-align: left">
                        @message.Content?.ToMarkdown()
                    </MudChatBubble>
                </MudChat>
            }
            @if (_currentMessageIsProcessing)
            {
                <MudChat ArrowPosition="ChatArrowPosition.None" ChatPosition="ChatBubblePosition.Start">
                    <MudChatBubble>
                        @if (!string.IsNullOrWhiteSpace(_chatModel.ReasoningEffortLevel))
                        {
                            <span>Reasoning... (can be quite slow 🐢💤)</span>
                        }
                        else
                        {
                            <span>Thinking...</span>
                        }

                        <RProgressIndicator />

                    </MudChatBubble>
                </MudChat>
            }
        </div>
        <div style="position: fixed; width: 100%; bottom: 20px; padding-left: 300px; padding-right: 300px">
            <RTextField @ref="_chatInput"
                        @bind-Value="@_chatInputMessage"
                        AdornmentIcon="@Icons.Material.Filled.ArrowCircleUp"
                        Placeholder="What can I help with Today?"
                        Disabled="@_currentMessageIsProcessing"
                        Lines="1"
                        Immediate
                        AutoGrow
                        Adornment="Adornment.End"
                        OnAdornmentClick="() => SendMessage(_chatInputMessage)"
                        Clearable
                        OnKeyUp="args => SubmitIfEnter(args, _chatInputMessage)"
                        OnFocus="() => _shouldRender = false"
                        OnFocusOut="() => _shouldRender = true"
                        TextUpdateSuppression="false"
                        Style="font-size: 18px; padding-top: 10px; padding-bottom: 10px;" />

        </div>

    }
</div>