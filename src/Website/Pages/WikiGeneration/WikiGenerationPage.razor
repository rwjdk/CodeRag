@page "/WikiGeneration"
@using Shared.Ai
@using Shared.Chunking.CSharp
@using Shared.EntityFramework.DbModels
@using Website.Extensions
@using Website.Models
<MudGrid Spacing="1" Class="align-items-center">
    <MudItem>
        <h1>Code Wiki Generation</h1>
    </MudItem>
    <MudSpacer />
    @if (_sources is { Length: > 1 })
    {
        <MudItem>
            <RSelect T="ProjectSourceEntity" Label="Source" Items="_sources" Value="_selectedSource" ValueChanged="x => SwitchSource(x)" ToStringFunc="@(x => x!.Name ?? "???")" />
        </MudItem>
    }
    <MudItem>
        @if (_selectedSource != null)
        {
            <RSelectFromEnum Style="width: 150px" Label="Kind" T="CSharpKind" Value="_kind" ValuesToExclude="[CSharpKind.None]" ValueChanged="x => SwitchKind(x)"></RSelectFromEnum>
        }
    </MudItem>
    <MudItem>
        @if (_selectedSource != null)
        {
            <RSelectFromEnum Style="width: 250px" Label="Status" T="SummaryStatus" Value="_summaryStatus" ValueChanged="x => SwitchSummaryStatus(x)"></RSelectFromEnum>
        }
    </MudItem>
    <MudItem>
        <RSelect T="AiChatModel" Label="AI-Model to use" Items="aiQuery.GetChatModels()" @bind-Value="_chatModel" ToStringFunc="@(x => x?.DeploymentName ?? "???")" Style="width: 200px" />
    </MudItem>
</MudGrid>

@if (_tree != null)
{
    <MudGrid>
        <MudItem xs="3">
            @if (_selectedSource != null)
            {
                <h2>@(_kind + "s") that match criteria </h2>
                <MudTextField T="string" Placeholder="Search" Variant="Variant.Outlined" Margin="Margin.Dense" Adornment="Adornment.End" AdornmentIcon="@Icons.Material.Filled.Search" TextChanged="OnSearchTextChanged" Immediate="true" Clearable="true" />
                <MudTreeView T="Item" Items="_tree.Children" Dense @ref="_treeView" FilterFunc="MatchesName" SelectedValue="_selectedItem" SelectedValueChanged="x=> SwitchSelected(x)" SelectionMode="SelectionMode.SingleSelection">
                    <ItemTemplate>
                        <MudTreeViewItem T="Item"
                                         Text="@context.Value!.GetText(context.Children)"
                                         TextTypo="Typo.caption"
                                         EndText="@context.Value.GetTotalRelatedEntities(context.Children).ToString()"
                                         EndTextTypo="Typo.caption"
                                         Value="@context.Value"
                                         Items="@context.Children"
                                         Icon="@context.Value.GetIcon()"
                                         Visible="@context.Visible">
                        </MudTreeViewItem>
                    </ItemTemplate>
                </MudTreeView>
            }
        </MudItem>
        <MudItem xs="9">
            @if (_selectedItem != null)
            {
                <RProgressBar @ref="_progressBar" />
                <RButton OnClick="()=> GenerateAll()">Generate and Accept for all</RButton>
                
                @_selectedItem.Info.FullName

                @foreach (var chunk in _selectedItem.CodeChunks)
                {
                    @* todo: use vector-entities to check diff from real file *@
                    <MudGrid>
                        <MudItem xs="6">
                            <pre>@chunk.Node.ToString()</pre>
                        </MudItem>
                        <MudItem>
                            <RButton OnClick="()=> GenerateCodeWiki(chunk)">Generate Wiki Summary</RButton>
                            <RTextField @bind-Value="chunk.XmlSummary" Lines="20" />
                        </MudItem>
                    </MudGrid>
                }
            }
        </MudItem>
    </MudGrid>
}
else
{
    <RProgressIndicator />
}