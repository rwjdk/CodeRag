@using CodeRag.Shared.VectorStore

<MudDataGrid T="CSharpCodeEntity" Items="Items" Dense SelectedItem="_selectEntry" SelectedItemChanged="x => SwitchSelectedItem(x)" Height="70vh">
    <Columns>
        <TemplateColumn T="CSharpCodeEntity">
            <CellTemplate>
                @if (context.Item.Id == _selectEntry?.Id)
                {
                    <div style="color: var(--mud-palette-primary)"><strong>@context.Item.Name</strong></div>
                    <div class="font-size-10">@context.Item.SourcePath</div>
                }
                else
                {
                    <div>@context.Item.Name</div>
                    <div class="font-size-10">@context.Item.SourcePath</div>
                }
            </CellTemplate>
        </TemplateColumn>
    </Columns>
</MudDataGrid>

@code {
    private CSharpCodeEntity? _selectEntry;

    [Parameter, EditorRequired]
    public required CSharpCodeEntity[] Items { get; set; }

    [Parameter, EditorRequired]
    public required EventCallback<CSharpCodeEntity> SelectedItemChanged { get; set; }

    private async Task SwitchSelectedItem(CSharpCodeEntity? entity)
    {
        if (entity == null)
        {
            return;
        }

        if (_selectEntry?.Id != entity.Id)
        {
            _selectEntry = entity;
            await SelectedItemChanged.InvokeAsync(_selectEntry);
        }
    }
}