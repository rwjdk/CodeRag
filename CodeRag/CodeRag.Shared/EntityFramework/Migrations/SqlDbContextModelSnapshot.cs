// <auto-generated />
using System;
using CodeRag.Shared.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CodeRag.Shared.Migrations
{
    [DbContext(typeof(SqlDbContext))]
    partial class SqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CodeRag.Shared.EntityFramework.DbModels.ProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("DeveloperInstructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GitHubOwner")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("GitHubRepo")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("GitHubToken")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("CodeRag.Shared.EntityFramework.DbModels.ProjectSourceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Kind")
                        .HasColumnType("int");

                    b.Property<int>("Location")
                        .HasColumnType("int");

                    b.Property<int?>("MarkdownChunkIgnoreIfLessThanThisAmountOfChars")
                        .HasColumnType("int");

                    b.Property<bool>("MarkdownFilenameEqualDocUrlSubpage")
                        .HasColumnType("bit");

                    b.Property<bool>("MarkdownIgnoreCommentedOutContent")
                        .HasColumnType("bit");

                    b.Property<bool>("MarkdownIgnoreImages")
                        .HasColumnType("bit");

                    b.Property<bool>("MarkdownIgnoreMicrosoftLearnNoneCsharpContent")
                        .HasColumnType("bit");

                    b.Property<int>("MarkdownLevelsToChunk")
                        .HasColumnType("int");

                    b.Property<int>("MarkdownOnlyChunkIfMoreThanThisNumberOfLines")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Path")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("PathSearchRecursive")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProjectEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RootUrl")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectEntityId");

                    b.ToTable("ProjectSources");
                });

            modelBuilder.Entity("CodeRag.Shared.EntityFramework.DbModels.ProjectSourceIgnoreEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Pattern")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<Guid?>("ProjectSourceEntityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ProjectSourceEntityId1")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProjectSourceEntityId");

                    b.HasIndex("ProjectSourceEntityId1");

                    b.ToTable("ProjectSourceIgnorePatterns");
                });

            modelBuilder.Entity("CodeRag.Shared.VectorStore.VectorEntity", b =>
                {
                    b.Property<Guid>("VectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Namespace")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Parent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentKind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SourceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SourcePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Summary")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TimeOfIngestion")
                        .HasColumnType("datetime2");

                    b.PrimitiveCollection<string>("Vector")
                        .HasColumnType("vector(1536)");

                    b.HasKey("VectorId");

                    b.ToTable("vector_sources");
                });

            modelBuilder.Entity("CodeRag.Shared.EntityFramework.DbModels.ProjectSourceEntity", b =>
                {
                    b.HasOne("CodeRag.Shared.EntityFramework.DbModels.ProjectEntity", null)
                        .WithMany("Sources")
                        .HasForeignKey("ProjectEntityId");
                });

            modelBuilder.Entity("CodeRag.Shared.EntityFramework.DbModels.ProjectSourceIgnoreEntity", b =>
                {
                    b.HasOne("CodeRag.Shared.EntityFramework.DbModels.ProjectSourceEntity", null)
                        .WithMany("FileIgnorePatterns")
                        .HasForeignKey("ProjectSourceEntityId");

                    b.HasOne("CodeRag.Shared.EntityFramework.DbModels.ProjectSourceEntity", null)
                        .WithMany("MarkdownChunkLineIgnorePatterns")
                        .HasForeignKey("ProjectSourceEntityId1");
                });

            modelBuilder.Entity("CodeRag.Shared.EntityFramework.DbModels.ProjectEntity", b =>
                {
                    b.Navigation("Sources");
                });

            modelBuilder.Entity("CodeRag.Shared.EntityFramework.DbModels.ProjectSourceEntity", b =>
                {
                    b.Navigation("FileIgnorePatterns");

                    b.Navigation("MarkdownChunkLineIgnorePatterns");
                });
#pragma warning restore 612, 618
        }
    }
}
